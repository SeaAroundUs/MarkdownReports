% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MarkdownReports.R
\name{setup_MarkdownReports}
\alias{setup_MarkdownReports}
\title{setup_MarkdownReports}
\usage{
setup_MarkdownReports(OutDir = getwd(), scriptname = basename(OutDir),
  title = "", setDir = T, append = F, png4Github = T)
}
\arguments{
\item{OutDir}{The output directory (absolute / full path).}

\item{scriptname}{Name of the script (file) generating the report. "scriptname" will be used as the default title for the report. It is assigned to the global environment and used in pdf's title field to denote which script generated the file.}

\item{title}{Manually set the title of the report.}

\item{append}{Set append to TRUE if you do not want to overwrite the previous report. Use continue_logging_markdown() if you return logging into an existing report. FALSE by default: rerunning the script overwrites the previous report. Archive reports manually into the timestamped subfolder within the OutDir.}

\item{png4Github}{A global variable, defined by this and used by the plotting functions. If TRUE (default), any link to the .png versions of images will be created in a GitHub compatible format. That means, when you upload your markdown report and the .png images to your GitHub wiki under "Reports/" the links will correctly display the images online.}
}
\description{
Setup the markdown report file and the output directory, create a sub directory in "OutDir". Its name is stamped with the script name and the modification time. Create the "path_of_report" variable used by all log-writing and ~wplot functions.
}
\examples{
setup_logging_markdown (scriptname =  , title =  , append = T, png4Github = T)
}
